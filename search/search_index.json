{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A set of libraries for pluggable business logic components \u00b6 The easiest way to make your code simple to reason about. dry-python is a collection of libraries aimed to help you to build an application in your domain. Stories \u00b6 You can define business logic processes with clear DSL. >>> from stories import story , arguments >>> class BuySubscription : ... @story ... @arguments ( \"price_id\" , \"user\" ) ... def buy ( I ): ... I . find_price ... I . check_balance ... I . persist_payment ... I . persist_subscription ... I . send_subscription_notification ... I . show_category Dependencies \u00b6 You can integrate it into frameworks you already use. >>> from dependencies import Injector , operation , this >>> from dependencies.contrib.django import view >>> from django.http import HttpResponse >>> from django.shortcuts import redirect >>> @view ... class BuySubscriptionView ( Injector ): ... buy_subscription = workflows . BuySubscription . buy ... price_id = this . kwargs [ \"id\" ] ... ... @operation ... def post ( buy_subscription , price_id , user ): ... result = buy_subscription . run ( price_id , user ) ... if result . is_success : ... return redirect ( result . value ) ... elif result . failed_on ( \"check_balance\" ): ... return HttpResponse ( \"<h1>Error: not enough money</h1>\" ) And a framework of your choice will not even notice the change. >>> from app.views import BuySubscriptionView >>> urlpatterns = [ ... path ( \"buy_subscription/<int:id>/\" , BuySubscriptionView . as_view ()), ... ] Drylabs maintains dry-python and helps those who want to use it inside their organizations. Read more at drylabs.io","title":"Home"},{"location":"#a-set-of-libraries-for-pluggable-business-logic-components","text":"The easiest way to make your code simple to reason about. dry-python is a collection of libraries aimed to help you to build an application in your domain.","title":"A set of libraries for pluggable business logic components"},{"location":"#stories","text":"You can define business logic processes with clear DSL. >>> from stories import story , arguments >>> class BuySubscription : ... @story ... @arguments ( \"price_id\" , \"user\" ) ... def buy ( I ): ... I . find_price ... I . check_balance ... I . persist_payment ... I . persist_subscription ... I . send_subscription_notification ... I . show_category","title":"Stories"},{"location":"#dependencies","text":"You can integrate it into frameworks you already use. >>> from dependencies import Injector , operation , this >>> from dependencies.contrib.django import view >>> from django.http import HttpResponse >>> from django.shortcuts import redirect >>> @view ... class BuySubscriptionView ( Injector ): ... buy_subscription = workflows . BuySubscription . buy ... price_id = this . kwargs [ \"id\" ] ... ... @operation ... def post ( buy_subscription , price_id , user ): ... result = buy_subscription . run ( price_id , user ) ... if result . is_success : ... return redirect ( result . value ) ... elif result . failed_on ( \"check_balance\" ): ... return HttpResponse ( \"<h1>Error: not enough money</h1>\" ) And a framework of your choice will not even notice the change. >>> from app.views import BuySubscriptionView >>> urlpatterns = [ ... path ( \"buy_subscription/<int:id>/\" , BuySubscriptionView . as_view ()), ... ] Drylabs maintains dry-python and helps those who want to use it inside their organizations. Read more at drylabs.io","title":"Dependencies"},{"location":"news/","text":"News \u00b6 returns 0.13 release \u00b6 03.02.2020 We are happy to announce returns v0.13 release! Take a look at new RequiresContext container, Immutable primitive type, and much more! https://github.com/dry-python/returns/releases/tag/0.13.0 FIT University Python Meetup \u00b6 03.02.2020 We will present the dry-python project at FIT University Python Meetup on the 8th of February. Come to talk to us! https://bel.cultreg.ru/events/26097/vstrecha-python-meetup returns 0.11 release \u00b6 30.08.2019 We are happy to announce returns v0.11 release! Take a look at new pipe function semantics, tap and identity functions, and much more! https://github.com/dry-python/returns/releases/tag/0.11.0 Moscow Python Podcast \u00b6 11.08.2019 How Domain-Driven Design helps you to avoid problems during development https://www.youtube.com/watch?v=QWSBmNutl2A PyCon Russia 2019 \u00b6 19.06.2019 We will present the dry-python project at PyCon Russia 2019 on the 24th of June. Come to talk to us! https://pycon.ru/2019/ Moscow Python Podcast \u00b6 09.06.2019 On business logic practices in Python. https://www.youtube.com/watch?v=UsV-7t3JjPw stories 0.10.1 release \u00b6 31.05.2019 We shipped a little stories bugfix release. Fix pytest reporter to work with fixture functions and pytest-bdd plugin properly. https://stories.readthedocs.io/en/latest/changelog/#0101-2019-05-31 Quality Conf 2019 \u00b6 10.05.2019 We will present the dry-python project at Quality Conf 2019 on the 27th of May. Come to talk to us! https://qualityconf.ru/2019/ Moscow Python Conf++ 2019 \u00b6 31.03.2019 We will present the dry-python project at Moscow Python Conf++ 2019 on 4th of April. Come to talk to us! https://conf.python.ru/2019/ Antida Meetup #5 \u00b6 12.03.2019 We will present the dry-python project at the Antida Meetup on 23th of March in Chelyabinsk. Come to talk to us! https://antidasoftware.com/events/ stories 0.10 release \u00b6 27.02.2019 https://stories.readthedocs.io/en/latest/changelog/#010-2019-02-27 Moscow Python Meetup #62 \u00b6 20.12.2018 We will present the dry-python project at the Moscow Python Meetup #62. Come to talk to us! https://moscowdjango.timepad.ru/event/873487/ Drylabs maintains dry-python and helps those who want to use it inside their organizations. Read more at drylabs.io","title":"News"},{"location":"news/#news","text":"","title":"News"},{"location":"news/#returns-013-release","text":"03.02.2020 We are happy to announce returns v0.13 release! Take a look at new RequiresContext container, Immutable primitive type, and much more! https://github.com/dry-python/returns/releases/tag/0.13.0","title":"returns 0.13 release"},{"location":"news/#fit-university-python-meetup","text":"03.02.2020 We will present the dry-python project at FIT University Python Meetup on the 8th of February. Come to talk to us! https://bel.cultreg.ru/events/26097/vstrecha-python-meetup","title":"FIT University Python Meetup"},{"location":"news/#returns-011-release","text":"30.08.2019 We are happy to announce returns v0.11 release! Take a look at new pipe function semantics, tap and identity functions, and much more! https://github.com/dry-python/returns/releases/tag/0.11.0","title":"returns 0.11 release"},{"location":"news/#moscow-python-podcast","text":"11.08.2019 How Domain-Driven Design helps you to avoid problems during development https://www.youtube.com/watch?v=QWSBmNutl2A","title":"Moscow Python Podcast"},{"location":"news/#pycon-russia-2019","text":"19.06.2019 We will present the dry-python project at PyCon Russia 2019 on the 24th of June. Come to talk to us! https://pycon.ru/2019/","title":"PyCon Russia 2019"},{"location":"news/#moscow-python-podcast_1","text":"09.06.2019 On business logic practices in Python. https://www.youtube.com/watch?v=UsV-7t3JjPw","title":"Moscow Python Podcast"},{"location":"news/#stories-0101-release","text":"31.05.2019 We shipped a little stories bugfix release. Fix pytest reporter to work with fixture functions and pytest-bdd plugin properly. https://stories.readthedocs.io/en/latest/changelog/#0101-2019-05-31","title":"stories 0.10.1 release"},{"location":"news/#quality-conf-2019","text":"10.05.2019 We will present the dry-python project at Quality Conf 2019 on the 27th of May. Come to talk to us! https://qualityconf.ru/2019/","title":"Quality Conf 2019"},{"location":"news/#moscow-python-conf-2019","text":"31.03.2019 We will present the dry-python project at Moscow Python Conf++ 2019 on 4th of April. Come to talk to us! https://conf.python.ru/2019/","title":"Moscow Python Conf++ 2019"},{"location":"news/#antida-meetup-5","text":"12.03.2019 We will present the dry-python project at the Antida Meetup on 23th of March in Chelyabinsk. Come to talk to us! https://antidasoftware.com/events/","title":"Antida Meetup #5"},{"location":"news/#stories-010-release","text":"27.02.2019 https://stories.readthedocs.io/en/latest/changelog/#010-2019-02-27","title":"stories 0.10 release"},{"location":"news/#moscow-python-meetup-62","text":"20.12.2018 We will present the dry-python project at the Moscow Python Meetup #62. Come to talk to us! https://moscowdjango.timepad.ru/event/873487/ Drylabs maintains dry-python and helps those who want to use it inside their organizations. Read more at drylabs.io","title":"Moscow Python Meetup #62"},{"location":"projects/","text":"Projects \u00b6 Returns \u00b6 Make your functions return something meaningful, typed, and safe! Source Code Issue Tracker Documentation Dependencies \u00b6 Dependency Injection for Humans. Source Code Issue Tracker Documentation Discussion Stories \u00b6 Define a user story in the business transaction DSL. Source Code Issue Tracker Documentation Discussion Mappers \u00b6 Declarative mappers from ORM models to domain entities. And back again! Source Code Issue Tracker Documentation Discussion Classes \u00b6 Smart, pythonic, ad-hoc, typed polymorphism for Python. Source Code Issue Tracker Documentation Lambdas \u00b6 Write short and fully-typed lambdas where you need them. Source Code Issue Tracker Documentation Editors \u00b6 A set of tools to automate clients' code upgrade as much as possible. Source Code Issue Tracker Discussion Bookshelf \u00b6 Code examples to learn dry-python with Django at the project scale. Source Code Issue Tracker Discussion","title":"Projects"},{"location":"projects/#projects","text":"","title":"Projects"},{"location":"projects/#returns","text":"Make your functions return something meaningful, typed, and safe! Source Code Issue Tracker Documentation","title":"Returns"},{"location":"projects/#dependencies","text":"Dependency Injection for Humans. Source Code Issue Tracker Documentation Discussion","title":"Dependencies"},{"location":"projects/#stories","text":"Define a user story in the business transaction DSL. Source Code Issue Tracker Documentation Discussion","title":"Stories"},{"location":"projects/#mappers","text":"Declarative mappers from ORM models to domain entities. And back again! Source Code Issue Tracker Documentation Discussion","title":"Mappers"},{"location":"projects/#classes","text":"Smart, pythonic, ad-hoc, typed polymorphism for Python. Source Code Issue Tracker Documentation","title":"Classes"},{"location":"projects/#lambdas","text":"Write short and fully-typed lambdas where you need them. Source Code Issue Tracker Documentation","title":"Lambdas"},{"location":"projects/#editors","text":"A set of tools to automate clients' code upgrade as much as possible. Source Code Issue Tracker Discussion","title":"Editors"},{"location":"projects/#bookshelf","text":"Code examples to learn dry-python with Django at the project scale. Source Code Issue Tracker Discussion","title":"Bookshelf"},{"location":"talks/","text":"Talks \u00b6 dry-python stories & Machine Learning \u00b6 Video Slides Domain Driven Design Toolkit 2 \u00b6 Video Slides Keeping software soft \u00b6 Video Slides Domain Driven Design Toolkit \u00b6 Video Slides Introducing dry-python \u00b6 Video Slides Drylabs maintains dry-python and helps those who want to use it inside their organizations. Read more at drylabs.io","title":"Talks"},{"location":"talks/#talks","text":"","title":"Talks"},{"location":"talks/#dry-python-stories-machine-learning","text":"Video Slides","title":"dry-python stories &amp; Machine Learning"},{"location":"talks/#domain-driven-design-toolkit-2","text":"Video Slides","title":"Domain Driven Design Toolkit 2"},{"location":"talks/#keeping-software-soft","text":"Video Slides","title":"Keeping software soft"},{"location":"talks/#domain-driven-design-toolkit","text":"Video Slides","title":"Domain Driven Design Toolkit"},{"location":"talks/#introducing-dry-python","text":"Video Slides Drylabs maintains dry-python and helps those who want to use it inside their organizations. Read more at drylabs.io","title":"Introducing dry-python"},{"location":"team/","text":"Team \u00b6 Artem Malyshev \u00b6 Since 2018 \u2014 Kaluga, Russia Creator of the dry-python project. A former member of the django channels maintenance team. Python programmer. Emacs user. proofit404 Nikita Sobolev \u00b6 Since 2018 \u2014 Moscow, Russia CTO at wemake.services, ElixirLangMoscow organizer. sobolevn Artem B \u00b6 Since 2019 \u2014 Chelyabinsk, Russia supadrupa","title":"Team"},{"location":"team/#team","text":"","title":"Team"},{"location":"team/#artem-malyshev","text":"Since 2018 \u2014 Kaluga, Russia Creator of the dry-python project. A former member of the django channels maintenance team. Python programmer. Emacs user. proofit404","title":"Artem Malyshev"},{"location":"team/#nikita-sobolev","text":"Since 2018 \u2014 Moscow, Russia CTO at wemake.services, ElixirLangMoscow organizer. sobolevn","title":"Nikita Sobolev"},{"location":"team/#artem-b","text":"Since 2019 \u2014 Chelyabinsk, Russia supadrupa","title":"Artem B"}]}